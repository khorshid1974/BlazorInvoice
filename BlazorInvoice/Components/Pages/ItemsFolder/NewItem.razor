@page "/items/new"
@using BlazorInvoice.Models
@inject BlazorInvoice.Data.InvoiceDbContext  dbContext
@inject NavigationManager NavigationManager
<div class="d-flex justify-content-between">
    <h3>اضافة مادة جديدة</h3>
    <a class="btn btn-primary" href="/items">العودة</a>
</div>

<EditForm method="post" Model="@item" OnValidSubmit="AddItem" FormName="NewItem" >
    <DataAnnotationsValidator />
   @* add forms fileld *@
  <ValidationSummary />
  
   <div >
        <label class="text-dark">مادة جديدة </label>
        <InputText class="form-control" @bind-Value="item.ItemName" />
        <ValidationMessage For="()=> item.ItemName"/>
   </div>
    <div >
        <label> سعر الشراء</label>
         <InputNumber class="form-control" @bind-Value="item.PurchasePrice" />
        <ValidationMessage For="()=>item.PurchasePrice"></ValidationMessage>
    </div>
 
    <div>
        <label>العدد</label>
        <InputNumber class="form-control" @bind-Value="item.Quantity" />
        <ValidationMessage For="()=>item.Quantity"></ValidationMessage>
    </div>
    <div >
        <label>سعر البيع </label>
        <InputNumber class="form-control" @bind-Value="item.SalePrice" />
        <ValidationMessage For="()=>item.SalePrice"></ValidationMessage>
    </div>
 
    <button class="btn btn-outline" type="submit">اضافة</button>
  
</EditForm>

@code {
    [SupplyParameterFromForm]
    public Item item { get; set; } = new Item();
    private async Task AddItem()
    {
       
        dbContext.Items.Add(item);
        await dbContext.SaveChangesAsync();
        NavigationManager.NavigateTo("/");
    }
    
}

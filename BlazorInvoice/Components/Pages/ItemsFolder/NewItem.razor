@page "/items/new"
@using BlazorInvoice.Models
@using Microsoft.EntityFrameworkCore
@inject BlazorInvoice.Data.InvoiceDbContext  dbContext
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<style>
    .table {
        width: 100%;
        margin-top: 20px;
        color: gray;
    }
</style>
<div class="d-flex justify-content-between">
    <h3>اضافة مادة جديدة</h3>
    <a class="btn btn-primary" href="/items">العودة</a>
</div>

<EditForm method="post" Model="@item" OnValidSubmit="AddItem" FormName="NewItem" >
    <DataAnnotationsValidator />
   @* add forms fileld *@
  <ValidationSummary />
  
   <div >
        <label class="text-dark">مادة جديدة </label>
        <InputText class="form-control" @bind-Value="item.ItemName" @oninput="searchForSimilarItems" />
        <ValidationMessage For="()=> item.ItemName"/>
   </div>
    <div >
        <label> سعر الشراء</label>
         <InputNumber class="form-control" @bind-Value="item.PurchasePrice" />
        <ValidationMessage For="()=>item.PurchasePrice"></ValidationMessage>
    </div>
 
    <div>
        <label>العدد</label>
        <InputNumber class="form-control" @bind-Value="item.Quantity" />
        <ValidationMessage For="()=>item.Quantity"></ValidationMessage>
    </div>
    <div >
        <label>سعر البيع </label>
        <InputNumber class="form-control" @bind-Value="item.SalePrice" />
        <ValidationMessage For="()=>item.SalePrice"></ValidationMessage>
    </div>
 
    <button class="btn btn-outline" type="submit">اضافة</button>
  
</EditForm>

<table class="table text-secondary">
    <thead>
        <tr>
            <th>اسم المادة</th>
            <th>سعر الشراء</th>
            <th>العدد</th>
            <th>سعر البيع</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in SimilarItems)
        {
            <tr>
                <td>@item.ItemName</td>
                <td>@item.PurchasePrice</td>
                <td>@item.Quantity</td>
                <td>@item.SalePrice</td>
            </tr>
        }
    </tbody>
</table>

@code {
    [SupplyParameterFromForm]
    public Item item { get; set; } = new Item();

    public List<Item> SimilarItems { get; set; } = new List<Item>();
    private async Task AddItem()
    {
       
        dbContext.Items.Add(item);
        await dbContext.SaveChangesAsync();
        NavigationManager.NavigateTo("/");
    }
    
    private async Task searchForSimilarItems(ChangeEventArgs e)
    {
        var itemName = e.Value.ToString();
        if(itemName.Length > 2)
        SimilarItems = await dbContext.Items.Where(i => i.ItemName.Contains(itemName)).ToListAsync();
       
       
    }
}
